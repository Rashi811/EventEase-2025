{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\ITPM Project\\\\ITPM V2\\\\EventEase-2025\\\\FRONTEND\\\\web-app\\\\src\\\\component\\\\Task\\\\UpdateTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport './CreateTaskForm.css'; // Ensure this CSS file exists\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateTaskForm = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    taskName: '',\n    taskID: '',\n    taskDate: '',\n    description: '',\n    process: '',\n    person: 'Miss.Ruwindya',\n    status: 'Pending'\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchTask = async () => {\n      try {\n        console.log(`Fetching task with ID: ${id}`);\n        const response = await axios.get(`http://localhost:5000/api/tasks/${id}`);\n        console.log('API Response:', response.data);\n        if (!response.data) {\n          throw new Error('Task not found');\n        }\n        setFormData({\n          taskName: response.data.taskName || '',\n          taskID: response.data.taskID || '',\n          taskDate: response.data.taskDate ? response.data.taskDate.split('T')[0] : '',\n          description: response.data.description || '',\n          process: response.data.process || '',\n          person: response.data.person || 'Miss.Ruwindya',\n          status: response.data.status || 'Pending'\n        });\n        setLoading(false);\n      } catch (error) {\n        console.error('Fetch error:', error);\n        setError(error.message);\n        setLoading(false);\n        alert(`Error loading task: ${error.message}`);\n      }\n    };\n    fetchTask();\n  }, [id]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.put(`http://localhost:5000/api/tasks/${id}`, formData);\n      console.log('Update response:', response.data);\n      alert('Task updated successfully!');\n      navigate('/all-tasks');\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error('Update error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error);\n      alert(`Update failed: ${((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message}`);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading task data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Task Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"taskName\",\n          value: formData.taskName,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          children: \"Update Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"cancel-btn\",\n          onClick: () => navigate('/all-tasks'),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateTaskForm, \"PQIe9xdx1idbL1AwloOtUGLzmKM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UpdateTaskForm;\nexport default UpdateTaskForm;\nvar _c;\n$RefreshReg$(_c, \"UpdateTaskForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","useParams","jsxDEV","_jsxDEV","UpdateTaskForm","_s","id","navigate","formData","setFormData","taskName","taskID","taskDate","description","process","person","status","loading","setLoading","error","setError","fetchTask","console","log","response","get","data","Error","split","message","alert","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","put","_error$response","_error$response2","_error$response2$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/ITPM Project/ITPM V2/EventEase-2025/FRONTEND/web-app/src/component/Task/UpdateTask.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport './CreateTaskForm.css'; // Ensure this CSS file exists\r\n\r\nconst UpdateTaskForm = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    taskName: '',\r\n    taskID: '',\r\n    taskDate: '',\r\n    description: '',\r\n    process: '',\r\n    person: 'Miss.Ruwindya',\r\n    status: 'Pending'\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchTask = async () => {\r\n      try {\r\n        console.log(`Fetching task with ID: ${id}`);\r\n        const response = await axios.get(`http://localhost:5000/api/tasks/${id}`);\r\n        console.log('API Response:', response.data);\r\n        \r\n        if (!response.data) {\r\n          throw new Error('Task not found');\r\n        }\r\n\r\n        setFormData({\r\n          taskName: response.data.taskName || '',\r\n          taskID: response.data.taskID || '',\r\n          taskDate: response.data.taskDate ? response.data.taskDate.split('T')[0] : '',\r\n          description: response.data.description || '',\r\n          process: response.data.process || '',\r\n          person: response.data.person || 'Miss.Ruwindya',\r\n          status: response.data.status || 'Pending'\r\n        });\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Fetch error:', error);\r\n        setError(error.message);\r\n        setLoading(false);\r\n        alert(`Error loading task: ${error.message}`);\r\n      }\r\n    };\r\n\r\n    fetchTask();\r\n  }, [id]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.put(`http://localhost:5000/api/tasks/${id}`, formData);\r\n      console.log('Update response:', response.data);\r\n      alert('Task updated successfully!');\r\n      navigate('/all-tasks');\r\n    } catch (error) {\r\n      console.error('Update error:', error.response?.data || error);\r\n      alert(`Update failed: ${error.response?.data?.message || error.message}`);\r\n    }\r\n  };\r\n\r\n  if (loading) return <div className=\"loading\">Loading task data...</div>;\r\n  if (error) return <div className=\"error\">Error: {error}</div>;\r\n\r\n  return (\r\n    <div className=\"task-form-container\">\r\n      <h2>Update Task</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* All your form fields here */}\r\n        <div className=\"form-group\">\r\n          <label>Task Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"taskName\"\r\n            value={formData.taskName}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        {/* Include all other fields exactly as in your original form */}\r\n        {/* ... */}\r\n\r\n        <div className=\"form-actions\">\r\n          <button type=\"submit\" className=\"submit-btn\">Update Task</button>\r\n          <button \r\n            type=\"button\" \r\n            className=\"cancel-btn\"\r\n            onClick={() => navigate('/all-tasks')}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateTaskForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}